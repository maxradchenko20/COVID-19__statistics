{"version":3,"sources":["components/CountryData/CountryData.js","lib/hooks.js","components/Contries/Countries.js","App.js","index.js"],"names":["CountryData","country","useState","data","setData","error","setError","loading","setLoading","useEffect","fetchData","a","Promise","resolve","reject","setTimeout","fetch","then","res","json","catch","err","console","log","responce","message","useGetStats","className","Object","keys","length","confirmed","value","deaths","recovered","Countries","setCountry","countrySelected","setCountrySelected","countryOptions","setCountryOptions","useGetCountries","countries","renderCountry","flagUrl","name","id","onClick","handleClick","src","alt","type","onChange","e","target","options","filter","regex","RegExp","match","placeholder","map","media","flag","slice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f158fad6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useGetStats} from \"../../lib/hooks\";\r\n\r\nconst CountryData = ({country}) => {\r\n\r\n  const {data, error, loading} = useGetStats(country);\r\n\r\n  return (\r\n    <div className=\"container-data\">\r\n      {error && <p className='message error'>Error...</p>}\r\n      {loading && <p className='message'>Loading...</p>}\r\n      {data && !!Object.keys(data).length && !error && !loading && (\r\n        <>\r\n          <h2>Статистика</h2>\r\n          <div className='stats'>\r\n            <p>\r\n              <span>Total cases: </span> {data.confirmed.value}\r\n            </p>\r\n            <p>\r\n              <span>Killed: </span> {data.deaths.value}\r\n            </p>\r\n            <p>\r\n              <span>Recovered: </span> {data.recovered.value}\r\n            </p>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default CountryData;","import {useEffect, useState} from 'react';\r\n\r\nexport const useGetCountries = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const responce = await fetch(\"https://api.sampleapis.com/countries/countries\")\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err))\r\n\r\n      setData(responce)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return {\r\n    data\r\n  }\r\n}\r\n\r\nexport const useGetStats = (country) => {\r\n\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function pause() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(resolve, 1000)\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n      setLoading(true);\r\n      setError('');\r\n\r\n      await pause();\r\n\r\n      const responce = await fetch(`https://covid19.mathdro.id/api/countries/${country}`)\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err))\r\n\r\n      if (!responce.error) {\r\n        setData(responce)\r\n      } else {\r\n        setError(responce.error.message)\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n    }\r\n    fetchData()\r\n  }, [country])\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading\r\n  }\r\n}","import {useGetCountries} from \"../../lib/hooks\";\r\nimport {useState} from \"react\";\r\nimport CountryData from \"../CountryData/CountryData\";\r\n\r\nconst Countries = () => {\r\n  const [country, setCountry] = useState('');\r\n  const [countrySelected, setCountrySelected] = useState('');\r\n  const [countryOptions, setCountryOptions] = useState([]);\r\n  const {data: countries} = useGetCountries();\r\n\r\n  const handleClick = (name) => {\r\n    setCountry(name);\r\n    setCountryOptions([]);\r\n    setCountrySelected(name);\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.value) {\r\n      setCountry(e.target.value);\r\n      const options = countries.filter(res => {\r\n        const regex = new RegExp(e.target.value, 'gi');\r\n        return res.name.match(regex);\r\n      });\r\n      setCountryOptions(options);\r\n    } else {\r\n      setCountry('');\r\n      setCountryOptions([]);\r\n    }\r\n  }\r\n\r\n  const renderCountry = (flagUrl, name, id) => {\r\n    return flagUrl ? (\r\n      <div className='option' key={id} onClick={() => handleClick(name)}>\r\n        <img src={flagUrl} alt={name}/>\r\n        <span>{name}</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='form'>\r\n        <h2>Countries</h2>\r\n        <input type='text' value={country} onChange={handleInput} placeholder=\"Enter the country name\"/>\r\n        {!!countryOptions.length && (\r\n          <div>\r\n            {countryOptions\r\n              .map(res => renderCountry(res.media.flag, res.name, res.id))\r\n              .slice(0, 10)}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {countrySelected && <CountryData country={countrySelected}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countries;","import Countries from \"./components/Contries/Countries\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Countries/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}